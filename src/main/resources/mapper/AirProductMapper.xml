<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="go.travel.dnh.mapper.AirProductMapper">

    <!--    조인할 테이블 1 resultMap : 복잡한 결과매핑을 할때 사용함 (Map은 Mapping을 의미) -->
    <!--    최종적으로 필요한 컬럼만 갖다 써도 무방한듯. DTO 처럼 각 테이블 전체 칼럼을 쓰지 않아도 됨 -->
    <resultMap id="AirlineDTO" type="AirlineDTO">
        <result column="al_name" property="al_name"/>
        <result column="al_logo_uri" property="al_logo_uri"/>
        <result column="al_logo_name" property="al_logo_name"/>
    </resultMap>
    <!--조인할 테이블 2-->
    <resultMap id="AirportDTO" type="AirportDTO">
        <result column="ap_code" property="ap_code"/>
        <result column="ap_code_name" property="ap_code_name"/>
    </resultMap>
    <!--조인할 테이블 3-->
    <resultMap id="AirGradeOptionDTO" type="AirGradeOptionDTO">
        <result column="agop_code" property="agop_code"/>
        <result column="agop_name" property="agop_name"/>
    </resultMap>

    <resultMap id="AirReservationDTO" type="AirReservationDTO">
        <result column="rno" property="rno"/>
    </resultMap>
    <!--메인테이블-->
    <resultMap id="AirProductDTO" type="AirProductDTO">
        <result column="ano" property="ano"/>
        <result column="al_code" property="al_code"/>
        <result column="ar_from" property="ar_from"/>
        <result column="ar_to" property="ar_to"/>
        <result column="agop_code" property="agop_code"/>
        <result column="ar_fl_no" property="ar_fl_no"/>
        <result column="ar_from_date" property="ar_from_date"/>
        <result column="ar_time" property="ar_time"/>
        <result column="ar_to_date" property="ar_to_date"/>
        <result column="ar_price" property="ar_price"/>
        <result column="ar_res_cnt" property="ar_res_cnt"/>
        <!--        collection 은 1:N 조인할때 사용합니다. 위에 적어둔 조인할 테이블들 적어주면 됩니다. -->
        <collection property="airlineDTO" resultMap="AirlineDTO"/>
        <collection property="airportDTO" resultMap="AirportDTO"/>
        <collection property="airGradeOptionDTO" resultMap="AirGradeOptionDTO"/>
        <collection property="AirReservationDTO" resultMap="AirReservationDTO"/>
    </resultMap>

    <sql id="productColumns">
        p.ano ,(select al_logo_uri from air_line al where al.al_code = p.al_code) al_logo_uri
             ,(select al_logo_name from air_line al where al.al_code = p.al_code ) al_logo_name
             ,(select al_name from air_line al where al.al_code = p.al_code ) al_name
             ,(select ap_code_name from airport ap1 where ap1.ap_code = p.ar_from ) ar_from
             ,(select ap_code_name from airport ap2 where ap2.ap_code = p.ar_to ) ar_to
             ,(select agop_name from air_grade_option ago where ago.agop_code = p.agop_code) agop_name
             ,p.ar_fl_no ,p.ar_from_date, p.ar_time, p.ar_to_date
             ,ar_price ,ar_res_cnt
    </sql>


    <!--상품 리스트 전체 조회-->
    <select id="selectPro" parameterType="SearchDTO" resultMap="AirProductDTO">
        select
        <include refid="productColumns"/>
        from air_product p
        where p.ar_from_date > now() and p.ar_sales_state = 'Y'
        order by p.ano
        limit #{pagination.limitStart}, #{amount}
    </select>
    <!--게시글 수 카운팅-->
    <select id="count" parameterType="SearchDTO" resultType="int">
        select COUNT(*)
        from air_product
    </select>
    
    <!--상품 리스트 검색 조회-->
    <!--편도가는편-->
    <select id="searchAirOneWay" parameterType="SearchDTO" resultMap="AirProductDTO">
        select
        <include refid="productColumns"/>
        from air_product p
        where date_format(p.ar_from_date, '%Y-%m-%d') = date_format( #{oneFromDate}, '%Y-%m-%d')
        and p.ar_from = #{oneFrom} and p.ar_to = #{oneTo}
        and p.ar_res_cnt > #{ea}
        and p.agop_code = #{airGrade}
        order by p.ano
        limit #{pagination.limitStart}, #{amount}
    </select>
    <!--왕복가는편-->
    <select id="searchAirFrom" parameterType="SearchDTO" resultMap="AirProductDTO">
        select
        <include refid="productColumns"/>
        from air_product p
        where date_format(p.ar_from_date, '%Y-%m-%d') = date_format( #{roundFromDate}, '%Y-%m-%d')
            and p.ar_from = #{roundFrom} and p.ar_to = #{roundTo}
            and p.ar_res_cnt > #{ea}
            and p.agop_code = #{airGrade}
        order by p.ano
        limit #{pagination.limitStart}, #{amount}
    </select>
    <!--오는편-->
    <select id="searchAirTo" parameterType="SearchDTO" resultMap="AirProductDTO">
        select
        <include refid="productColumns"/>
        from air_product p
        where date_format(p.ar_to_date, '%Y-%m-%d') = date_format( #{roundToDate}, '%Y-%m-%d')
        and p.ar_from = #{roundTo} and p.ar_to = #{roundFrom}
        and p.ar_res_cnt > #{ea}
        and p.agop_code = #{airGrade}
        order by p.ano
        limit #{pagination.limitStart}, #{amount}
    </select>
    <!--검색 카운트-->
    <!--편도-->
    <select id="searchCntOneWay" parameterType="SearchDTO" resultType="int">
        select COUNT(*)
        from air_product
        where date_format(ar_from_date, '%Y-%m-%d') = date_format( #{oneFromDate}, '%Y-%m-%d')
          and ar_from = #{oneFrom} and ar_to = #{oneTo}
          and agop_code = #{airGrade}
    </select>
    <!--가는편-->
    <select id="searchCntFrom" parameterType="SearchDTO" resultType="int">
        select COUNT(*)
        from air_product
        where date_format(ar_from_date, '%Y-%m-%d') = date_format( #{roundFromDate}, '%Y-%m-%d')
          and ar_from = #{roundFrom} and ar_to = #{roundTo}
          and agop_code = #{airGrade}
    </select>
    <!--오는편-->
    <select id="searchCntTo" parameterType="SearchDTO" resultType="int">
        select COUNT(*)
        from air_product
        where date_format(ar_from_date, '%Y-%m-%d') = date_format( #{roundToDate}, '%Y-%m-%d')
          and ar_from = #{roundTo} and ar_to = #{roundFrom}
          and agop_code = #{airGrade}
    </select>
    
    <!--상세검색-->
    <!--편도가는편-->
    <select id="detailSearchOneWay" parameterType="SearchDTO" resultMap="AirProductDTO">
        select
        <include refid="productColumns"/>
        from air_product p
        where date_format(p.ar_from_date, '%Y-%m-%d') = date_format( #{oneFromDate}, '%Y-%m-%d')
        and p.ar_from = #{oneFrom} and p.ar_to = #{oneTo}
        and p.ar_res_cnt > #{ea}
        and p.agop_code = #{airGrade}
        and p.al_code = #{airline}
        limit #{pagination.limitStart}, #{amount}
    </select>


    <!--공항리스트 읽어오기-->
    <select id="selectAP" parameterType="map" resultMap="AirportDTO">
        select ap_code,
               ap_name, ap_code_name
        from airport
    </select>
    <!--항공사 리스트 읽어오기-->
    <select id="selectAL" parameterType="map" resultMap="AirlineDTO">
        select *
        from air_line
    </select>
    <!--예약정보 읽어오기-->
    <select id="selectRes" resultMap="AirProductDTO">
        select
            (select ap_name from airport where ap_code = p.ar_from) ar_from
            ,(select ap_name from airport where ap_code = p.ar_to) ar_to
            ,(select al_logo_uri from air_line al where al.al_code = p.al_code) al_logo_uri
            ,(select al_logo_name from air_line al where al.al_code = p.al_code ) al_logo_name
            ,(select al_name from air_line al where al.al_code = p.al_code ) al_name
            ,(select agop_name from air_grade_option ago where ago.agop_code = p.agop_code) agop_name
            ,p.ar_fl_no ,p.ar_from_date, p.ar_to_date ,ar_price, ar_time
        from air_product p
        where p.ano = #{ano}
    </select>
    <!--잉이잉ㅇ!!!!!!!!!!!!-->
    <!--잉이잉ㅇ!!!!!!!!!!!!-->
    <select id="selectMyRes" resultMap="AirProductDTO">
        select
                (select ap_name from airport  where ap_code = p.ar_from) ar_from,
                (select ap_name from airport where ap_code = p.ar_to) ar_to,
                (select agop_name from air_grade_option where agop_code = p.agop_code) agop_code,
                p.ar_from_date, p.ar_to_date
        from air_product p, reservation2 res
        where p.ano = res.out_ano and mno = #{mno};
    </select>
    
</mapper>